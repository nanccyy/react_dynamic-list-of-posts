{"version":3,"sources":["components/PostsList/PostsList.jsx","api/api.js","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","api/posts.js","api/users.js","App.jsx","index.js"],"names":["PostsList","posts","setPostId","postId","className","map","post","key","id","userId","title","type","onClick","BASE_URL","getPostComments","a","fetch","response","comments","json","then","base","data","filter","comment","addComment","name","email","body","method","JSON","stringify","removeComment","commentId","NewCommentForm","useState","handleName","handleEmail","handleComment","handleInput","event","inputName","target","value","placeholder","trimLeft","required","onChange","includes","preventDefault","handleSubmit","defaultProps","PostDetails","details","hiddenComments","switchHidden","setComments","useEffect","length","getAllPosts","obj","getPostDetails","PostId","getUsers","App","updatePosts","users","updateUsers","updateUserId","setDetails","slice","user","ReactDOM","render","document","getElementById"],"mappings":"sUAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAWC,EAArB,EAAqBA,OAArB,OACvB,yBAAKC,UAAU,aACb,sCAEA,wBAAIA,UAAU,mBACXH,EAAMI,KAAI,SAAAC,GAAI,OACb,wBAAIF,UAAU,kBAAkBG,IAAKD,EAAKE,IACxC,6BACE,qCAEGF,EAAKG,OAFR,KAIG,KAEFH,EAAKI,OAER,4BACEC,KAAK,SACLP,UAAU,2BACVQ,QAAS,WACPV,EAAWC,IAAWG,EAAKE,GAAMF,EAAKE,GAAK,KAG5CL,IAAWG,EAAKE,GAAK,QAAU,gB,+BC3B/BK,EAAW,iCCEXC,EAAe,uCAAG,WAAMX,GAAN,iBAAAY,EAAA,sEACNC,MAAM,GAAD,OAAIH,EAAJ,cADC,cACvBI,EADuB,OAEvBC,EAAWD,EAASE,OACvBC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,QAAO,SAAAC,GAAO,OAAIA,EAAQrB,SAAWA,QAHlC,kBAKtBe,GALsB,2CAAH,sDAQfO,EAAU,uCAAG,WAAMtB,EAAQuB,EAAMC,EAAOC,GAA3B,eAAAb,EAAA,sEACDC,MAAM,GAAD,OAAIH,EAAJ,aAAyB,CACnDgB,OAAQ,OACRD,KAAME,KAAKC,UAAU,CACnB5B,SAAQuB,OAAMC,QAAOC,WAJD,cAClBX,EADkB,yBAQjBA,EAASE,QARQ,2CAAH,4DAWVa,EAAa,uCAAG,WAAMC,GAAN,eAAAlB,EAAA,sEACJC,MAAM,GAAD,OAAIH,EAAJ,qBAAyBoB,GAAa,CAChEJ,OAAQ,WAFiB,cACrBZ,EADqB,yBAKpBA,EAASE,QALW,2CAAH,sDChBbe,EAAiB,SAAC,GAAgB,IAAd/B,EAAa,EAAbA,OAAa,EACjBgC,mBAAS,IADQ,mBACrCT,EADqC,KAC/BU,EAD+B,OAEfD,mBAAS,IAFM,mBAErCR,EAFqC,KAE9BU,EAF8B,OAGXF,mBAAS,IAHE,mBAGrCX,EAHqC,KAG5Bc,EAH4B,KAKtCC,EAAc,SAACC,GACnB,IAAMC,EAAYD,EAAME,OAAOhB,KACvBiB,EAAUH,EAAME,OAAhBC,MAER,OAAQF,GACN,IAAK,OACHL,EAAWO,GACX,MAEF,IAAK,QACHN,EAAYM,GACZ,MAEF,QACEL,EAAcK,KAepB,OACE,0BAAMvC,UAAU,kBACd,yBAAKA,UAAU,cACb,2BACEO,KAAK,OACLe,KAAK,OACLkB,YAAY,YACZxC,UAAU,wBACVuC,MAAOjB,EAAKmB,WACZC,UAAQ,EACRC,SAAU,SAACP,GACTD,EAAYC,OAKlB,yBAAKpC,UAAU,cACb,2BACEO,KAAK,QACLe,KAAK,QACLkB,YAAY,aACZxC,UAAU,wBACVuC,MAAOhB,EACPoB,SAAU,SAACP,GACTD,EAAYC,IAEdM,UAAQ,KAIZ,yBAAK1C,UAAU,cACb,8BACEsB,KAAK,OACLkB,YAAY,oBACZxC,UAAU,wBACVuC,MAAOnB,EACPuB,SAAU,SAACP,GACTD,EAAYC,IAEdM,UAAQ,KAIZ,4BACEnC,KAAK,SACLP,UAAU,uCACVQ,QAAS,SAAC4B,IAzDK,SAACA,GAChBrC,GAAUuB,GAAQC,EAAMqB,SAAS,MAAQxB,IAC3CgB,EAAMS,iBACNxB,EAAWtB,EAAQuB,EAAMC,EAAOH,GAEhCY,EAAW,IACXC,EAAY,IACZC,EAAc,KAmDVY,CAAaV,KAJjB,mBAaNN,EAAeiB,aAAe,CAC5BhD,OAAQ,G,UC1FGiD,EAAc,SAAC,GAAyB,IAAvBjD,EAAsB,EAAtBA,OAAQkD,EAAc,EAAdA,QAAc,EACXlB,oBAAS,GADE,mBAC3CmB,EAD2C,KAC3BC,EAD2B,OAElBpB,mBAAS,IAFS,mBAE3CjB,EAF2C,KAEjCsC,EAFiC,KAIlDC,qBAAU,WACRF,GAAa,GACbzC,EAAgBX,GAAQiB,MAAK,SAAAH,GAAQ,OAAIuC,EAAYvC,QACpD,CAACd,EAAQe,IAMZ,OACE,oCACImC,EAGE,yBAAKjD,UAAU,eACb,6CAEA,6BAASA,UAAU,qBACjB,2BAAIiD,EAAQ3C,UAGXQ,EAASwC,QAER,6BAAStD,UAAU,yBACjB,4BACEO,KAAK,SACLP,UAAU,SACVQ,QAAS,WACP2C,GAAcD,KAGdA,EAA2B,QAAV,QAClBpC,EAASwC,OACT,IACoB,IAApBxC,EAASwC,OAAe,UAAY,YAGvC,wBAAItD,UAAU,sBACVkD,GAEE,oCACGpC,EAASb,KAAI,SAAAmB,GAAO,OACnB,wBACEjB,IAAKiB,EAAQhB,GACbJ,UAAU,0BAEV,4BACEO,KAAK,SACLP,UAAU,oCACVQ,QAAS,WA5CjB,IAACqB,IA6CuBT,EAAQhB,GA5CpDwB,EAAcC,KAwCY,KASA,2BAAIT,EAAQI,aAU9B,iCACE,yBAAKxB,UAAU,6BACb,kBAAC,EAAD,CACED,OAAQkD,EAAQ7C,QAxDxB,yBAmEV4C,EAAYD,aAAe,CACzBhD,OAAQ,EACRkD,QAAS,CACP3C,MAAO,GACPF,GAAI,IC3FD,IAAMmD,EAAW,uCAAG,WAAMlD,GAAN,mBAAAM,EAAA,sEACFC,MAAM,GAAD,OAAIH,EAAJ,WADH,UACnBI,EADmB,OAGpBR,EAHoB,uBAIjBR,EAAQgB,EAASE,OAAOC,MAAK,SAAAwC,GAAG,OAAIA,EAAItC,QAJvB,kBAMhBrB,GANgB,cASnBA,EAAQgB,EAASE,OAAOC,MAAK,SAAAwC,GAAG,OACpCA,EAAItC,KAAKC,QAAO,SAAAjB,GAAI,OAAIA,EAAKG,SAAWA,QAVjB,kBAalBR,GAbkB,2CAAH,sDAgBX4D,EAAc,uCAAG,WAAMC,GAAN,eAAA/C,EAAA,sEACLC,MAAM,GAAD,OAAIH,EAAJ,kBAAsBiD,IADtB,cACtB7C,EADsB,yBAGrBA,EAASE,QAHY,2CAAH,sDChBd4C,EAAQ,uCAAG,4BAAAhD,EAAA,sEACCC,MAAM,GAAD,OAAIH,EAAJ,WADN,cAChBI,EADgB,yBAGfA,EAASE,QAHM,2CAAH,qDC6DN6C,EAtDH,WAAO,IAAD,EACa7B,mBAAS,IADtB,mBACTlC,EADS,KACFgE,EADE,OAEa9B,mBAAS,IAFtB,mBAET+B,EAFS,KAEFC,EAFE,OAGehC,mBAAS,GAHxB,mBAGT1B,EAHS,KAGD2D,EAHC,OAIYjC,mBAAS,GAJrB,mBAIThC,EAJS,KAIDD,EAJC,OAKciC,mBAAS,IALvB,mBAKTkB,EALS,KAKAgB,EALA,KAmBhB,OAZAZ,qBAAU,WACRE,GAAalD,GAAQW,MAAK,SAAAH,GAAQ,OAAIgD,EAAYhD,QACjD,CAACR,IAEJgD,qBAAU,WACRM,IAAW3C,MAAK,SAAAH,GAAQ,OAAIkD,EAAYlD,EAASK,KAAKgD,MAAM,EAAG,UAC9D,IAEHb,qBAAU,WACRI,EAAe1D,GAAQiB,MAAK,SAAAH,GAAQ,OAAIoD,EAAWpD,EAASK,WAC3D,CAACnB,IAGF,yBAAKC,UAAU,OACb,4BAAQA,UAAU,eAChB,qDAGE,4BACEA,UAAU,qBACV2C,SAAU,SAAAP,GAAK,OAAI4B,EAAa5B,EAAME,OAAOC,SAE7C,4BAAQA,MAAM,KAAd,aACCuB,EAAM7D,KAAI,SAAAkE,GAAI,OACb,4BAAQhE,IAAKgE,EAAK/D,GAAImC,MAAO4B,EAAK/D,IAAK+D,EAAK7C,YAMpD,0BAAMtB,UAAU,aACd,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEH,MAAOA,EACPE,OAAQA,EACRD,UAAWA,KAIf,yBAAKE,UAAU,gBACb,kBAAC,EAAD,CAAaiD,QAASA,EAASlD,OAAQA,QCnDjDqE,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.bdbbfec4.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\n\nexport const PostsList = ({ posts, setPostId, postId }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li className=\"PostsList__item\" key={post.id}>\n          <div>\n            <b>\n              [User #\n              {post.userId}\n              ]:\n              {' '}\n            </b>\n            {post.title}\n          </div>\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={() => {\n              setPostId((postId !== post.id) ? post.id : 0);\n            }}\n          >\n            {postId === post.id ? 'Close' : 'Open'}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  setPostId: PropTypes.func.isRequired,\n  postId: PropTypes.number.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  const response = await fetch(`${BASE_URL}/comments`);\n  const comments = response.json()\n    .then(base => base.data.filter(comment => comment.postId === postId));\n\n  return comments;\n};\n\nexport const addComment = async(postId, name, email, body) => {\n  const response = await fetch(`${BASE_URL}/comments`, {\n    method: 'post',\n    body: JSON.stringify({\n      postId, name, email, body,\n    }),\n  });\n\n  return response.json();\n};\n\nexport const removeComment = async(commentId) => {\n  const response = await fetch(`${BASE_URL}/comments/${commentId}`, {\n    method: 'delete',\n  });\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport PropTypes from 'prop-types';\nimport { addComment } from '../../api/comments';\n\nexport const NewCommentForm = ({ postId }) => {\n  const [name, handleName] = useState('');\n  const [email, handleEmail] = useState('');\n  const [comment, handleComment] = useState('');\n\n  const handleInput = (event) => {\n    const inputName = event.target.name;\n    const { value } = event.target;\n\n    switch (inputName) {\n      case 'name':\n        handleName(value);\n        break;\n\n      case 'email':\n        handleEmail(value);\n        break;\n\n      default:\n        handleComment(value);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    if (postId && name && email.includes('@') && comment) {\n      event.preventDefault();\n      addComment(postId, name, email, comment);\n\n      handleName('');\n      handleEmail('');\n      handleComment('');\n    }\n  };\n\n  return (\n    <form className=\"NewCommentForm\">\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name.trimLeft()}\n          required\n          onChange={(event) => {\n            handleInput(event);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => {\n            handleInput(event);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={comment}\n          onChange={(event) => {\n            handleInput(event);\n          }}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n        onClick={(event) => {\n          handleSubmit(event);\n        }}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.defaultProps = {\n  postId: 0,\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { removeComment, getPostComments } from '../../api/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ postId, details }) => {\n  const [hiddenComments, switchHidden] = useState(false);\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    switchHidden(false);\n    getPostComments(postId).then(response => setComments(response));\n  }, [postId, comments]);\n\n  const deleteComment = (commentId) => {\n    removeComment(commentId);\n  };\n\n  return (\n    <>\n      {!details\n        ? 'Please choose a post'\n        : (\n          <div className=\"PostDetails\">\n            <h2>Post details:</h2>\n\n            <section className=\"PostDetails__post\">\n              <p>{details.title}</p>\n            </section>\n\n            {!!comments.length\n              && (\n                <section className=\"PostDetails__comments\">\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={() => {\n                      switchHidden(!hiddenComments);\n                    }}\n                  >\n                    {!hiddenComments ? 'Hide ' : 'Show '}\n                    {comments.length}\n                    {' '}\n                    {comments.length === 1 ? 'comment' : 'comments'}\n                  </button>\n\n                  <ul className=\"PostDetails__list\">\n                    {!hiddenComments\n                      && (\n                        <>\n                          {comments.map(comment => (\n                            <li\n                              key={comment.id}\n                              className=\"PostDetails__list-item\"\n                            >\n                              <button\n                                type=\"button\"\n                                className=\"PostDetails__remove-button button\"\n                                onClick={() => {\n                                  deleteComment(comment.id);\n                                }}\n                              >\n                                X\n                              </button>\n                              <p>{comment.body}</p>\n                            </li>\n                          ))}\n                        </>\n                      )\n                    }\n                  </ul>\n                </section>\n              )\n            }\n            <section>\n              <div className=\"PostDetails__form-wrapper\">\n                <NewCommentForm\n                  postId={details.id}\n                />\n              </div>\n            </section>\n          </div>\n        )\n      }\n    </>\n  );\n};\n\nPostDetails.defaultProps = {\n  postId: 0,\n  details: {\n    title: '',\n    id: 0,\n  },\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number,\n  details: PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n  }),\n};\n","import { BASE_URL } from './api';\n\nexport const getAllPosts = async(userId) => {\n  const response = await fetch(`${BASE_URL}/posts`);\n\n  if (!userId) {\n    const posts = response.json().then(obj => obj.data);\n\n    return posts;\n  }\n\n  const posts = response.json().then(obj => (\n    obj.data.filter(post => post.userId === userId)\n  ));\n\n  return posts;\n};\n\nexport const getPostDetails = async(PostId) => {\n  const response = await fetch(`${BASE_URL}/posts/${PostId}`);\n\n  return response.json();\n};\n","import { BASE_URL } from './api';\n\nexport const getUsers = async() => {\n  const response = await fetch(`${BASE_URL}/users`);\n\n  return response.json();\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nimport { getAllPosts, getPostDetails } from './api/posts';\nimport { getUsers } from './api/users';\n\nconst App = () => {\n  const [posts, updatePosts] = useState([]);\n  const [users, updateUsers] = useState([]);\n  const [userId, updateUserId] = useState(0);\n  const [postId, setPostId] = useState(0);\n  const [details, setDetails] = useState({});\n\n  useEffect(() => {\n    getAllPosts(+userId).then(response => updatePosts(response));\n  }, [userId]);\n\n  useEffect(() => {\n    getUsers().then(response => updateUsers(response.data.slice(0, 10)));\n  }, []);\n\n  useEffect(() => {\n    getPostDetails(postId).then(response => setDetails(response.data));\n  }, [postId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={event => updateUserId(event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            {users.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            postId={postId}\n            setPostId={setPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails details={details} postId={postId} />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}